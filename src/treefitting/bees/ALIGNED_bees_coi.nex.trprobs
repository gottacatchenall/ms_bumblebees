#NEXUS
[ID: 1477080487]
[This file contains the trees that were found during the MCMC
search, sorted by posterior probability. "p" indicates the
posterior probability of the tree whereas "P" indicates the
cumulative posterior probability.]

begin trees;
   translate
    1 Bombus_balteatus,
    2 Bombus_californicus,
    3 Vespula_alascensis,
    4 Bombus_fraternus,
    5 Bombus_griseocollis,
    6 Bombus_appositus,
    7 Bombus_fervidus,
    8 Bombus_pensylvanicus,
    9 Bombus_occidentalis,
   10 Bombus_auricomus,
   11 Bombus_nevadensis,
   12 Bombus_bifarius,
   13 Bombus_impatiens,
   14 Bombus_huntii,
   15 Bombus_vosnesenskii,
   16 Bombus_rufocinctus,
   17 Bombus_melanopygus,
   18 Bombus_sylvicola,
   19 Bombus_centralis,
   20 Bombus_flavifrons,
   21 Bombus_frigidus,
   22 Bombus_mixtus,
   23 Bombus_fernaldae,
   24 Bombus_insularis,
   25 Bombus_variabilis;
   tree tree_1 [p = 0.257, P = 0.257] = [&W 0.256579] (((((18,17),(13,(15,(14,12)))),((22,21),((20,19),(16,(5,4))))),(((11,10),9),((((25,24),23),6),(8,(7,2))))),3,1);
   tree tree_2 [p = 0.072, P = 0.329] = [&W 0.072368] (((((22,21),((18,17),(13,(15,(14,12))))),((20,19),(16,(5,4)))),(((11,10),9),((((25,24),23),6),(8,(7,2))))),3,1);
   tree tree_3 [p = 0.059, P = 0.388] = [&W 0.059211] ((((22,21),(((18,17),(13,(15,(14,12)))),((20,19),(16,(5,4))))),(((11,10),9),((((25,24),23),6),(8,(7,2))))),3,1);
   tree tree_4 [p = 0.059, P = 0.447] = [&W 0.059211] (((((11,10),9),(((18,17),(13,(15,(14,12)))),((22,21),((20,19),(16,(5,4)))))),((((25,24),23),6),(8,(7,2)))),3,1);
   tree tree_5 [p = 0.046, P = 0.493] = [&W 0.046053] (((16,(5,4)),((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),(((11,10),9),((((25,24),23),6),(8,(7,2)))))),3,1);
   tree tree_6 [p = 0.026, P = 0.520] = [&W 0.026316] (((((20,19),((22,21),((18,17),(13,(15,(14,12)))))),(16,(5,4))),(((11,10),9),((((25,24),23),6),(8,(7,2))))),3,1);
   tree tree_7 [p = 0.026, P = 0.546] = [&W 0.026316] ((((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),(16,(5,4))),(((11,10),9),((((25,24),23),6),(8,(7,2))))),3,1);
   tree tree_8 [p = 0.026, P = 0.572] = [&W 0.026316] (((5,4),(16,((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),(((11,10),9),((((25,24),23),6),(8,(7,2))))))),3,1);
   tree tree_9 [p = 0.020, P = 0.592] = [&W 0.019737] (((5,4),(16,((20,19),((22,21),((18,17),((13,(15,(14,12))),(((11,10),9),((((25,24),23),6),(8,(7,2)))))))))),3,1);
   tree tree_10 [p = 0.020, P = 0.612] = [&W 0.019737] ((((25,24),23),((6,(((11,10),9),(((20,19),((22,21),((18,17),(13,(15,(14,12)))))),(16,(5,4))))),(8,(7,2)))),3,1);
   tree tree_11 [p = 0.020, P = 0.632] = [&W 0.019737] ((((11,10),9),((((18,17),(13,(15,(14,12)))),((22,21),((20,19),(16,(5,4))))),((((25,24),23),6),(8,(7,2))))),3,1);
   tree tree_12 [p = 0.013, P = 0.645] = [&W 0.013158] ((((11,10),((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),(16,(9,(5,4))))),((((25,24),23),6),(8,(7,2)))),3,1);
   tree tree_13 [p = 0.013, P = 0.658] = [&W 0.013158] ((((25,24),23),(6,((((11,10),9),((22,21),(((18,17),(13,(15,(14,12)))),((20,19),(16,(5,4)))))),(8,(7,2))))),3,1);
   tree tree_14 [p = 0.013, P = 0.671] = [&W 0.013158] (((16,(5,4)),((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),(((11,10),9),(((25,24),23),(6,(8,(7,2))))))),3,1);
   tree tree_15 [p = 0.013, P = 0.684] = [&W 0.013158] ((((22,21),(((20,19),((18,17),(13,(15,(14,12))))),(16,(5,4)))),(((11,10),9),((((25,24),23),6),(8,(7,2))))),3,1);
   tree tree_16 [p = 0.013, P = 0.697] = [&W 0.013158] ((((25,24),23),(6,((((11,10),9),(((18,17),(13,(15,(14,12)))),((22,21),((20,19),(16,(5,4)))))),(8,(7,2))))),3,1);
   tree tree_17 [p = 0.013, P = 0.711] = [&W 0.013158] ((((25,24),23),(6,((((11,10),9),(((22,21),((18,17),(13,(15,(14,12))))),((20,19),(16,(5,4))))),(8,(7,2))))),3,1);
   tree tree_18 [p = 0.007, P = 0.717] = [&W 0.006579] (((11,10),(((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),(16,(9,(5,4)))),((((25,24),23),6),(8,(7,2))))),3,1);
   tree tree_19 [p = 0.007, P = 0.724] = [&W 0.006579] ((((11,10),((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),(16,(9,(5,4))))),(((25,24),23),(6,(8,(7,2))))),3,1);
   tree tree_20 [p = 0.007, P = 0.730] = [&W 0.006579] (((16,(9,(5,4))),((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),((11,10),((((25,24),23),6),(8,(7,2)))))),3,1);
   tree tree_21 [p = 0.007, P = 0.737] = [&W 0.006579] (((((22,21),((18,17),(13,((15,(14,12)),((11,10),9))))),((20,19),(16,(5,4)))),((((25,24),23),6),(8,(7,2)))),3,1);
   tree tree_22 [p = 0.007, P = 0.743] = [&W 0.006579] (((11,10),(((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),(16,(9,(5,4)))),(6,(((25,24),23),(8,(7,2)))))),3,1);
   tree tree_23 [p = 0.007, P = 0.750] = [&W 0.006579] ((((((18,17),(13,(15,(14,12)))),((11,10),9)),((22,21),((20,19),(16,(5,4))))),((((25,24),23),6),(8,(7,2)))),3,1);
   tree tree_24 [p = 0.007, P = 0.757] = [&W 0.006579] ((((11,10),9),(((22,21),(((18,17),(13,(15,(14,12)))),((20,19),(16,(5,4))))),((((25,24),23),6),(8,(7,2))))),3,1);
   tree tree_25 [p = 0.007, P = 0.763] = [&W 0.006579] ((((11,10),9),((((18,17),(13,(15,(14,12)))),((20,19),((22,21),(16,(5,4))))),((((25,24),23),6),(8,(7,2))))),3,1);
   tree tree_26 [p = 0.007, P = 0.770] = [&W 0.006579] (((((18,17),(13,((15,14),12))),((22,21),((20,19),(16,(5,4))))),(((11,10),9),((((25,24),23),6),(8,(7,2))))),3,1);
   tree tree_27 [p = 0.007, P = 0.776] = [&W 0.006579] ((((22,21),((20,19),(((18,17),(13,(15,(14,12)))),(16,(5,4))))),(((11,10),9),((((25,24),23),6),(8,(7,2))))),3,1);
   tree tree_28 [p = 0.007, P = 0.783] = [&W 0.006579] ((((25,24),23),((((11,10),9),(((20,19),((22,21),((18,17),(13,(15,(14,12)))))),(16,(5,4)))),(6,(8,(7,2))))),3,1);
   tree tree_29 [p = 0.007, P = 0.789] = [&W 0.006579] (((((22,21),((18,17),((13,(15,(14,12))),((11,10),9)))),((20,19),(16,(5,4)))),(6,(((25,24),23),(8,(7,2))))),3,1);
   tree tree_30 [p = 0.007, P = 0.796] = [&W 0.006579] (((((11,10),9),((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),(16,(5,4)))),((((25,24),23),6),(8,(7,2)))),3,1);
   tree tree_31 [p = 0.007, P = 0.803] = [&W 0.006579] ((((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),(((11,10),9),(16,(5,4)))),((((25,24),23),6),(8,(7,2)))),3,1);
   tree tree_32 [p = 0.007, P = 0.809] = [&W 0.006579] ((((25,24),23),((((11,10),9),((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),(16,(5,4)))),(6,(8,(7,2))))),3,1);
   tree tree_33 [p = 0.007, P = 0.816] = [&W 0.006579] (((((11,10),9),(((18,17),(13,(15,(14,12)))),(((22,21),(20,19)),(16,(5,4))))),((((25,24),23),6),(8,(7,2)))),3,1);
   tree tree_34 [p = 0.007, P = 0.822] = [&W 0.006579] (((((22,21),((18,17),((13,(15,(14,12))),((11,10),9)))),((20,19),(16,(5,4)))),((((25,24),23),6),(8,(7,2)))),3,1);
   tree tree_35 [p = 0.007, P = 0.829] = [&W 0.006579] (((11,10),(((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),(9,(16,(5,4)))),(((25,24),23),(6,(8,(7,2)))))),3,1);
   tree tree_36 [p = 0.007, P = 0.836] = [&W 0.006579] (((((20,19),((22,21),(((18,17),(13,(15,(14,12)))),((11,10),9)))),(16,(5,4))),(6,(((25,24),23),(8,(7,2))))),3,1);
   tree tree_37 [p = 0.007, P = 0.842] = [&W 0.006579] ((((11,10),9),((16,(5,4)),((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),(6,(((25,24),23),(8,(7,2))))))),3,1);
   tree tree_38 [p = 0.007, P = 0.849] = [&W 0.006579] ((((25,24),23),((((20,19),((22,21),((18,17),((13,(15,(14,12))),((11,10),9))))),(16,(5,4))),(6,(8,(7,2))))),3,1);
   tree tree_39 [p = 0.007, P = 0.855] = [&W 0.006579] (((16,(5,4)),((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),((11,10),(9,((((25,24),23),6),(8,(7,2))))))),3,1);
   tree tree_40 [p = 0.007, P = 0.862] = [&W 0.006579] ((((25,24),23),(6,((((11,10),9),(((22,21),(20,19)),(((18,17),(13,(15,(14,12)))),(16,(5,4))))),(8,(7,2))))),3,1);
   tree tree_41 [p = 0.007, P = 0.868] = [&W 0.006579] (((5,4),(16,((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),(((11,10),9),(((25,24),23),(6,(8,(7,2)))))))),3,1);
   tree tree_42 [p = 0.007, P = 0.875] = [&W 0.006579] ((((13,(15,(14,12))),((18,17),((22,21),((20,19),(16,(5,4)))))),(((11,10),9),((((25,24),23),6),(8,(7,2))))),3,1);
   tree tree_43 [p = 0.007, P = 0.882] = [&W 0.006579] ((((25,24),23),((6,((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),(((11,10),9),(16,(5,4))))),(8,(7,2)))),3,1);
   tree tree_44 [p = 0.007, P = 0.888] = [&W 0.006579] (((5,4),(16,((20,19),((22,21),((18,17),((13,(15,(14,12))),((11,10),(9,((((25,24),23),6),(8,(7,2))))))))))),3,1);
   tree tree_45 [p = 0.007, P = 0.895] = [&W 0.006579] ((((25,24),23),((6,(((11,10),9),((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),(16,(5,4))))),(8,(7,2)))),3,1);
   tree tree_46 [p = 0.007, P = 0.901] = [&W 0.006579] ((((25,24),23),((6,(((20,19),((22,21),((18,17),(13,(15,(14,12)))))),(16,(5,4)))),(((11,10),9),(8,(7,2))))),3,1);
   tree tree_47 [p = 0.007, P = 0.908] = [&W 0.006579] ((((25,24),23),(6,((((11,10),9),(((20,19),((22,21),((18,17),(13,(15,(14,12)))))),(16,(5,4)))),(8,(7,2))))),3,1);
   tree tree_48 [p = 0.007, P = 0.914] = [&W 0.006579] ((((25,24),23),(6,(((22,21),((((18,17),(13,(15,(14,12)))),((11,10),9)),((20,19),(16,(5,4))))),(8,(7,2))))),3,1);
   tree tree_49 [p = 0.007, P = 0.921] = [&W 0.006579] ((6,((((25,24),23),(((11,10),9),((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),(16,(5,4))))),(8,(7,2)))),3,1);
   tree tree_50 [p = 0.007, P = 0.928] = [&W 0.006579] (((5,4),(16,(((11,10),9),((((22,21),(20,19)),((18,17),(13,((15,14),12)))),(6,(((25,24),23),(8,(7,2)))))))),3,1);
   tree tree_51 [p = 0.007, P = 0.934] = [&W 0.006579] (((((18,17),(13,(15,(14,12)))),(((22,21),(20,19)),(16,(5,4)))),(((11,10),9),((((25,24),23),6),(8,(7,2))))),3,1);
   tree tree_52 [p = 0.007, P = 0.941] = [&W 0.006579] (((((18,17),(13,(15,(14,12)))),((22,21),((20,19),(16,(5,4))))),(((11,10),9),(6,(((25,24),23),(8,(7,2)))))),3,1);
   tree tree_53 [p = 0.007, P = 0.947] = [&W 0.006579] (((5,4),((16,9),((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),((11,10),((((25,24),23),6),(8,(7,2))))))),3,1);
   tree tree_54 [p = 0.007, P = 0.954] = [&W 0.006579] ((((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),(((11,10),9),(16,(5,4)))),(6,(((25,24),23),(8,(7,2))))),3,1);
   tree tree_55 [p = 0.007, P = 0.961] = [&W 0.006579] (((((22,21),((18,17),(13,(15,(14,12))))),((20,19),(16,(5,4)))),(((11,10),9),(6,(((25,24),23),(8,(7,2)))))),3,1);
   tree tree_56 [p = 0.007, P = 0.967] = [&W 0.006579] ((((25,24),23),((6,(((11,10),9),(((18,17),(13,(15,(14,12)))),((22,21),((20,19),(16,(5,4))))))),(8,(7,2)))),3,1);
   tree tree_57 [p = 0.007, P = 0.974] = [&W 0.006579] (((16,(5,4)),(((11,10),9),((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),((((25,24),23),6),(8,(7,2)))))),3,1);
   tree tree_58 [p = 0.007, P = 0.980] = [&W 0.006579] (((16,(5,4)),(((20,19),((22,21),((18,17),(13,(15,(14,12)))))),(((11,10),9),(((25,24),23),(6,(8,(7,2))))))),3,1);
   tree tree_59 [p = 0.007, P = 0.987] = [&W 0.006579] ((((20,19),(16,(5,4))),(((18,17),(13,(15,(14,12)))),((22,21),(((11,10),9),((((25,24),23),6),(8,(7,2))))))),3,1);
   tree tree_60 [p = 0.007, P = 0.993] = [&W 0.006579] ((((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),(16,(5,4))),(((11,10),9),(6,(((25,24),23),(8,(7,2)))))),3,1);
   tree tree_61 [p = 0.007, P = 1.000] = [&W 0.006579] (((5,4),(16,(((11,10),9),((((22,21),(20,19)),((18,17),(13,(15,(14,12))))),(6,(((25,24),23),(8,(7,2)))))))),3,1);
end;
